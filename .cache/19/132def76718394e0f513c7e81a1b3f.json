{"id":"js/postprocessing.js","dependencies":[{"name":"C:\\Apache24\\htdocs\\THREE-Icosahedron\\package.json","includedInParent":true,"mtime":1609785086016}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostProcessing = void 0;\n\n/**\r\n * Pixelation shader\r\n */\nvar PostProcessing = {\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'resolution': {\n      value: null\n    },\n    'pixelSize': {\n      value: 1.\n    },\n    'time': {\n      value: 0.\n    },\n    'rgbShift': {\n      value: 0\n    }\n  },\n  vertexShader: ['varying highp vec2 vUv;', 'void main() {', 'vUv = uv;', 'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: \"\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform float pixelSize;\\n\\t\\tuniform vec2 resolution;\\n    uniform float time;\\n    uniform float rgbShift;\\n    varying highp vec2 vUv;\\n    float hash(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\\n\\n\\n\\t\\tvoid main(){\\n      vec2 shift = vec2(0.01,0.01)*rgbShift;\\n      // make bw\\n      vec4 t = texture2D(tDiffuse,vUv);\\n      vec4 t1 = texture2D(tDiffuse,vUv + shift);\\n      vec4 t2 = texture2D(tDiffuse,vUv - shift);\\n      vec3 color = vec3((t.r + t.b + t.g)/5.);\\n      vec3 color1 = vec3((t1.r + t1.b + t1.g)/5.);\\n      vec3 color2 = vec3((t2.r + t2.b + t2.g)/5.);\\n\\n      color = vec3(color.r,color1.g,color2.b);\\n\\n      // rgb shift\\n\\n      // noise\\n      float val = hash(vUv + time)*0.3;\\n      vec2 dxy = pixelSize / resolution;\\n      vec2 coord = dxy * floor( vUv / dxy );\\n      gl_FragColor = texture2D(tDiffuse,vUv);\\n      gl_FragColor = vec4(color + vec3(val),1.);\\n    }\"\n};\nexports.PostProcessing = PostProcessing;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/postprocessing.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"js/postprocessing.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"js/postprocessing.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"js/postprocessing.js","original":{"line":5,"column":0}},{"name":"PostProcessing","generated":{"line":11,"column":4},"source":"js/postprocessing.js","original":{"line":5,"column":4}},{"generated":{"line":11,"column":18},"source":"js/postprocessing.js","original":{"line":5,"column":18}},{"generated":{"line":11,"column":21},"source":"js/postprocessing.js","original":{"line":5,"column":21}},{"name":"uniforms","generated":{"line":12,"column":0},"source":"js/postprocessing.js","original":{"line":7,"column":1}},{"name":"uniforms","generated":{"line":12,"column":2},"source":"js/postprocessing.js","original":{"line":7,"column":1}},{"generated":{"line":12,"column":10},"source":"js/postprocessing.js","original":{"line":7,"column":9}},{"generated":{"line":12,"column":12},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":13,"column":0},"source":"js/postprocessing.js","original":{"line":9,"column":2}},{"generated":{"line":13,"column":16},"source":"js/postprocessing.js","original":{"line":9,"column":14}},{"name":"value","generated":{"line":14,"column":0},"source":"js/postprocessing.js","original":{"line":9,"column":16}},{"name":"value","generated":{"line":14,"column":6},"source":"js/postprocessing.js","original":{"line":9,"column":16}},{"generated":{"line":14,"column":11},"source":"js/postprocessing.js","original":{"line":9,"column":21}},{"generated":{"line":14,"column":13},"source":"js/postprocessing.js","original":{"line":9,"column":23}},{"generated":{"line":15,"column":0},"source":"js/postprocessing.js","original":{"line":9,"column":14}},{"generated":{"line":15,"column":5},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":16,"column":0},"source":"js/postprocessing.js","original":{"line":10,"column":2}},{"generated":{"line":16,"column":18},"source":"js/postprocessing.js","original":{"line":10,"column":16}},{"name":"value","generated":{"line":17,"column":0},"source":"js/postprocessing.js","original":{"line":10,"column":18}},{"name":"value","generated":{"line":17,"column":6},"source":"js/postprocessing.js","original":{"line":10,"column":18}},{"generated":{"line":17,"column":11},"source":"js/postprocessing.js","original":{"line":10,"column":23}},{"generated":{"line":17,"column":13},"source":"js/postprocessing.js","original":{"line":10,"column":25}},{"generated":{"line":18,"column":0},"source":"js/postprocessing.js","original":{"line":10,"column":16}},{"generated":{"line":18,"column":5},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":19,"column":0},"source":"js/postprocessing.js","original":{"line":11,"column":4}},{"generated":{"line":19,"column":17},"source":"js/postprocessing.js","original":{"line":11,"column":17}},{"name":"value","generated":{"line":20,"column":0},"source":"js/postprocessing.js","original":{"line":11,"column":19}},{"name":"value","generated":{"line":20,"column":6},"source":"js/postprocessing.js","original":{"line":11,"column":19}},{"generated":{"line":20,"column":11},"source":"js/postprocessing.js","original":{"line":11,"column":24}},{"generated":{"line":20,"column":13},"source":"js/postprocessing.js","original":{"line":11,"column":26}},{"generated":{"line":21,"column":0},"source":"js/postprocessing.js","original":{"line":11,"column":17}},{"generated":{"line":21,"column":5},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":22,"column":0},"source":"js/postprocessing.js","original":{"line":12,"column":4}},{"generated":{"line":22,"column":12},"source":"js/postprocessing.js","original":{"line":12,"column":12}},{"name":"value","generated":{"line":23,"column":0},"source":"js/postprocessing.js","original":{"line":12,"column":14}},{"name":"value","generated":{"line":23,"column":6},"source":"js/postprocessing.js","original":{"line":12,"column":14}},{"generated":{"line":23,"column":11},"source":"js/postprocessing.js","original":{"line":12,"column":19}},{"generated":{"line":23,"column":13},"source":"js/postprocessing.js","original":{"line":12,"column":21}},{"generated":{"line":24,"column":0},"source":"js/postprocessing.js","original":{"line":12,"column":12}},{"generated":{"line":24,"column":5},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":25,"column":0},"source":"js/postprocessing.js","original":{"line":13,"column":4}},{"generated":{"line":25,"column":16},"source":"js/postprocessing.js","original":{"line":13,"column":16}},{"name":"value","generated":{"line":26,"column":0},"source":"js/postprocessing.js","original":{"line":13,"column":18}},{"name":"value","generated":{"line":26,"column":6},"source":"js/postprocessing.js","original":{"line":13,"column":18}},{"generated":{"line":26,"column":11},"source":"js/postprocessing.js","original":{"line":13,"column":23}},{"generated":{"line":26,"column":13},"source":"js/postprocessing.js","original":{"line":13,"column":25}},{"generated":{"line":27,"column":0},"source":"js/postprocessing.js","original":{"line":13,"column":16}},{"generated":{"line":28,"column":0},"source":"js/postprocessing.js","original":{"line":7,"column":11}},{"generated":{"line":28,"column":3},"source":"js/postprocessing.js","original":{"line":5,"column":21}},{"name":"vertexShader","generated":{"line":29,"column":0},"source":"js/postprocessing.js","original":{"line":16,"column":1}},{"name":"vertexShader","generated":{"line":29,"column":2},"source":"js/postprocessing.js","original":{"line":16,"column":1}},{"generated":{"line":29,"column":14},"source":"js/postprocessing.js","original":{"line":16,"column":13}},{"generated":{"line":29,"column":16},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":17},"source":"js/postprocessing.js","original":{"line":18,"column":2}},{"generated":{"line":29,"column":42},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":44},"source":"js/postprocessing.js","original":{"line":20,"column":2}},{"generated":{"line":29,"column":59},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":61},"source":"js/postprocessing.js","original":{"line":22,"column":2}},{"generated":{"line":29,"column":72},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":74},"source":"js/postprocessing.js","original":{"line":23,"column":2}},{"generated":{"line":29,"column":149},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":151},"source":"js/postprocessing.js","original":{"line":25,"column":2}},{"generated":{"line":29,"column":154},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"name":"join","generated":{"line":29,"column":156},"source":"js/postprocessing.js","original":{"line":27,"column":3}},{"generated":{"line":29,"column":160},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":161},"source":"js/postprocessing.js","original":{"line":27,"column":9}},{"generated":{"line":29,"column":165},"source":"js/postprocessing.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":166},"source":"js/postprocessing.js","original":{"line":5,"column":21}},{"name":"fragmentShader","generated":{"line":30,"column":0},"source":"js/postprocessing.js","original":{"line":29,"column":1}},{"name":"fragmentShader","generated":{"line":30,"column":2},"source":"js/postprocessing.js","original":{"line":29,"column":1}},{"generated":{"line":30,"column":16},"source":"js/postprocessing.js","original":{"line":29,"column":15}},{"generated":{"line":31,"column":0},"source":"js/postprocessing.js","original":{"line":5,"column":21}},{"generated":{"line":31,"column":1},"source":"js/postprocessing.js","original":{"line":5,"column":0}}],"sources":{"js/postprocessing.js":"/**\r\n * Pixelation shader\r\n */\r\n\r\nvar PostProcessing = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'resolution': { value: null },\r\n    'pixelSize': { value: 1. },\r\n    'time': { value: 0. },\r\n    'rgbShift': { value: 0 },\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t'varying highp vec2 vUv;',\r\n\r\n\t\t'void main() {',\r\n\r\n\t\t'vUv = uv;',\r\n\t\t'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n\t\t'}'\r\n\r\n\t].join( '\\n' ),\r\n\r\n\tfragmentShader: `\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform float pixelSize;\r\n\t\tuniform vec2 resolution;\r\n    uniform float time;\r\n    uniform float rgbShift;\r\n    varying highp vec2 vUv;\r\n    float hash(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\r\n\r\n\r\n\t\tvoid main(){\r\n      vec2 shift = vec2(0.01,0.01)*rgbShift;\r\n      // make bw\r\n      vec4 t = texture2D(tDiffuse,vUv);\r\n      vec4 t1 = texture2D(tDiffuse,vUv + shift);\r\n      vec4 t2 = texture2D(tDiffuse,vUv - shift);\r\n      vec3 color = vec3((t.r + t.b + t.g)/5.);\r\n      vec3 color1 = vec3((t1.r + t1.b + t1.g)/5.);\r\n      vec3 color2 = vec3((t2.r + t2.b + t2.g)/5.);\r\n\r\n      color = vec3(color.r,color1.g,color2.b);\r\n\r\n      // rgb shift\r\n\r\n      // noise\r\n      float val = hash(vUv + time)*0.3;\r\n      vec2 dxy = pixelSize / resolution;\r\n      vec2 coord = dxy * floor( vUv / dxy );\r\n      gl_FragColor = texture2D(tDiffuse,vUv);\r\n      gl_FragColor = vec4(color + vec3(val),1.);\r\n    }`\r\n\t\t\r\n\r\n\t\r\n};\r\n\r\nexport { PostProcessing };"},"lineCount":null}},"error":null,"hash":"b5781de69bbf7aca8052c5406946ffdb","cacheData":{"env":{}}}